pipeline {
    agent { label "node3" }
    options { disableConcurrentBuilds() }
    environment {
        DOCKERHUB_NAME = "everexdev/meteor"
        dockerImage = ""
    }
    stages {
        stage("Checkout") {
          steps {
            cleanWs()
            checkout([$class: 'GitSCM', branches: [[name: '$BRANCH']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '83ff6dc5-45b4-4996-b383-e1f225203f3c', url: 'git@github.com:xereverex/meteor-launchpad.git']]])
          }
        }
        stage('Build prod version') {
          steps {
            script{
                  dockerImage = docker.build(DOCKERHUB_NAME + ":latest", "-m 4g --memory-swap 4g .")
                  docker.withRegistry('', '1a862028-6499-46dc-9e7d-831b2c3f001a'){
                    dockerImage.push()
                  }
            }
          }
        }
        stage('Build debug version') {
          steps {
            script{
                  dockerImage = docker.build(DOCKERHUB_NAME + ":latest-dev", "-m 4g --memory-swap 4g -f dev.dockerfile .")
                  docker.withRegistry('', '1a862028-6499-46dc-9e7d-831b2c3f001a'){
                    dockerImage.push()
                  }
            }
          }
        }

    }
    post {
      always {
        cleanWs()
      }
    }
}
